<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cronmanagement.dao.CronJobDetailsDAO">
	<select id="getCronJobDetails" resultType="cronmanagement.bean.CronJob">
		SELECT id as cronId,
		serverId as serverId,
		comment as cronComment,
		status as cronStatus,
		name
		as cronName,
		scheduleexpr as cronExpression,
		cronType as cronType
		FROM
		cronjob where status not like 'deleted'
	</select>

	<select id="getCronJobDetailsByServerId" resultType="cronmanagement.bean.CronJob">
		SELECT id as
		cronId,
		serverId as serverId,
		comment as cronComment,
		status as
		cronStatus,
		name as cronName,
		scheduleexpr as cronExpression,
		cronType as
		cronType
		FROM cronjob where serverId = #{serverId} and
		status not like 'deleted'
	</select>

	<select id="getCronJobDetailsByCronId" resultType="cronmanagement.bean.CronJob">
		SELECT id as
		cronId,
		serverId as serverId,
		comment as cronComment,
		status as
		cronStatus,
		name as cronName,
		scheduleexpr as cronExpression,
		cronType as
		cronType
		FROM cronjob where id = #{cronId} and status not like 'deleted'
	</select>

	<insert id="saveAllCronJobs">
		INSERT INTO
		cronjob(serverId,comment,status,name,scheduleexpr,cronType)
		VALUES (
		<foreach item="cronJob" index="index" collection="cronJobs"
			open="" close="" separator="),(">
			#{cronJob.serverId},
			#{cronJob.cronComment}, #{cronJob.cronStatus},#{cronJob.cronName},
			#{cronJob.cronExpression}, #{cronJob.cronType}
		</foreach>
		)
	</insert>

	<update id="updateAllCronJobs">
		UPDATE cronjob
		set comment=#{cronJob.cronComment},
		status=#{cronJob.cronStatus},name=#{cronJob.cronName}
		WHERE id
		= #{cronJob.cronId}
	</update>

	<update id="deleteCronJobs">
		UPDATE cronjob
		set status='deleted' where id In(
		<foreach item="id" index="index" collection="cronIds" open=""
			close="" separator=",">#{id}</foreach>
		)
	</update>

	<select id="getCronJobDetailsByCronType" resultType="cronmanagement.bean.CronJob">
		SELECT id as
		cronId,
		serverId as serverId,
		comment as cronComment,
		status as
		cronStatus,
		name as cronName,
		scheduleexpr as cronExpression,
		cronType as
		cronType
		FROM cronjob where cronType like #{cronType} and
		status not like 'deleted'
	</select>

	<select id="getCronJobByServerIdAndCronName" resultType="cronmanagement.bean.CronJob">
		SELECT
		id as cronId,
		serverId as serverId,
		comment as cronComment,
		status as
		cronStatus,
		name as cronName,
		scheduleexpr as cronExpression,
		cronType as
		cronType
		FROM cronjob where serverId = #{serverId} and name like
		#{cronName} and status not like 'deleted'
	</select>

</mapper>